# This is the main config file for default parameters for all hyperparameter and task parameter.
# Every config file should import this. The project will run with these parameters, no matter what.

name: "SLURM"   # MUST BE "SLURM"

# Required
partition: "gpu"
job-name: "lts_gns_prodmp"    # this will be the experiments name in slurm

# Required - Cluster Specific
num_parallel_jobs: 99
ntasks: 1
cpus-per-task: 2
mem-per-cpu: 15000
time: 2880  # in minutes

sbatch_args: # Dictionary of SBATCH keywords and arguments
  gres: "gpu:1"
  nodelist: node6


slurm_log: "./output/slurmlog" # optional. dir in which slurm output and error logs will be saved.
---
name: p5302_lts_gns_prodmp_task_properties

import_path: ../default.yml
import_exp: DEFAULT

repetitions: 2 # number of times one set of parameters is run
reps_per_job: 1 # number of repetitions in each job. useful for paralellization. defaults to 1.
reps_in_parallel: 1 # number of repetitions in each job that are executed in parallel. defaults to 1.

iterations: 1000 # number of iterations of the algorithm, usually about 500 when it starts overfitting

params:
  recording:
    wandb:
      enabled: True  # right now disabled to not spam runs during debugging

  device: cuda

  algorithm:
    name: lts_gns_prodmp
    common:
      training:
        batches_per_epoch: 500
        # how may minibatches per recorded step. After every epoch, there is the small evaluation of the val tasks.
      evaluation:
        large:
          frequency: 10
          multi_step_evaluations: [1, 5, 10]
          animation_task_indices: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]   # which tasks to plot.
          recompute_edges: True
          initial_eval: False
      simulator:
        loss: mse
        chamfer:
          density_aware: True

    lts_gns_prodmp:
      evaluation:
        small:
          num_posterior_learner_step: 10
        large:
          num_posterior_learner_steps: 100
          training_gmm_indices: [ ]
          num_z_samples_per_animation_task: 1
      simulator:
        likelihood:
          std: 1.0
      posterior_learner:
        name: task_properties_learner

  env:
    name: deformable_plate
    common:
      preprocess:
        train_label_noise: 0.0
        include_pc2mesh: False
      postprocess:
        auxiliary_tasks:
          auxiliary_tasks_per_task: 30
        context_eval_tasks:
          auxiliary_tasks_per_task: 1
        batch:
          max_train_batch_size: 30
      debug:
        max_tasks_per_split: null





